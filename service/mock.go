// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	websocket "github.com/gorilla/websocket"
)

// MockIWebSocketClient is a mock of IWebSocketClient interface.
type MockIWebSocketClient struct {
	ctrl     *gomock.Controller
	recorder *MockIWebSocketClientMockRecorder
}

// MockIWebSocketClientMockRecorder is the mock recorder for MockIWebSocketClient.
type MockIWebSocketClientMockRecorder struct {
	mock *MockIWebSocketClient
}

// NewMockIWebSocketClient creates a new mock instance.
func NewMockIWebSocketClient(ctrl *gomock.Controller) *MockIWebSocketClient {
	mock := &MockIWebSocketClient{ctrl: ctrl}
	mock.recorder = &MockIWebSocketClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWebSocketClient) EXPECT() *MockIWebSocketClientMockRecorder {
	return m.recorder
}

// EstablishConnection mocks base method.
func (m *MockIWebSocketClient) EstablishConnection(url string) (*websocket.Conn, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EstablishConnection", url)
	ret0, _ := ret[0].(*websocket.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EstablishConnection indicates an expected call of EstablishConnection.
func (mr *MockIWebSocketClientMockRecorder) EstablishConnection(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EstablishConnection", reflect.TypeOf((*MockIWebSocketClient)(nil).EstablishConnection), url)
}

// WriteMessageToSocketConnInterval mocks base method.
func (m *MockIWebSocketClient) WriteMessageToSocketConnInterval(conn *websocket.Conn, data []byte, seconds time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteMessageToSocketConnInterval", conn, data, seconds)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteMessageToSocketConnInterval indicates an expected call of WriteMessageToSocketConnInterval.
func (mr *MockIWebSocketClientMockRecorder) WriteMessageToSocketConnInterval(conn, data, seconds interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteMessageToSocketConnInterval", reflect.TypeOf((*MockIWebSocketClient)(nil).WriteMessageToSocketConnInterval), conn, data, seconds)
}

// MockIFileClient is a mock of IFileClient interface.
type MockIFileClient struct {
	ctrl     *gomock.Controller
	recorder *MockIFileClientMockRecorder
}

// MockIFileClientMockRecorder is the mock recorder for MockIFileClient.
type MockIFileClientMockRecorder struct {
	mock *MockIFileClient
}

// NewMockIFileClient creates a new mock instance.
func NewMockIFileClient(ctrl *gomock.Controller) *MockIFileClient {
	mock := &MockIFileClient{ctrl: ctrl}
	mock.recorder = &MockIFileClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIFileClient) EXPECT() *MockIFileClientMockRecorder {
	return m.recorder
}

// InitFileConn mocks base method.
func (m *MockIFileClient) InitFileConn() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitFileConn")
	ret0, _ := ret[0].(error)
	return ret0
}

// InitFileConn indicates an expected call of InitFileConn.
func (mr *MockIFileClientMockRecorder) InitFileConn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitFileConn", reflect.TypeOf((*MockIFileClient)(nil).InitFileConn))
}

// WriteToFile mocks base method.
func (m *MockIFileClient) WriteToFile(str string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WriteToFile", str)
}

// WriteToFile indicates an expected call of WriteToFile.
func (mr *MockIFileClientMockRecorder) WriteToFile(str interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteToFile", reflect.TypeOf((*MockIFileClient)(nil).WriteToFile), str)
}
